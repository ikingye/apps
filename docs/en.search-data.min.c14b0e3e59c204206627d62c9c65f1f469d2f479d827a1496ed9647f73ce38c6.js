'use strict';(function(){const b={cache:!0};b.doc={id:'id',field:['title','content'],store:['title','href','section']};const a=FlexSearch.create('balance',b);window.bookSearchIndex=a,a.add({id:0,href:'/apps/docs/macos/3/github/',title:"GitHub",section:"三星",content:"GitHub #  设置代理 #  git config --global http.proxy \u0026#34;http://127.0.0.1:8081\u0026#34; git config --global https.proxy \u0026#34;http://127.0.0.1:8081\u0026#34; # socks5 代理（如 Shadowsocks） git config --global http.proxy \u0026#34;socks5://127.0.0.1:1080\u0026#34; git config --global https.proxy \u0026#34;socks5://127.0.0.1:1080\u0026#34; # 取消代理 git config --global --unset http.proxy git config --global --unset https.proxy  学习 Github #  Github Learning Lab #  Introduction to GitHub #   Github 工具 #  cli/cli #  GitHub’s official command line tool https://cli.github.com\ngithub/hub #  A command-line tool that makes git easier to use with GitHub. https://hub.github.com/\n 开源库 素材 / 规范 #  徽章 shields.io #  如：\n参考：\n  用 [Substats] 和 Shields.io 为你的个人主页定制动态数据小牌子\nspencerwooo/Substats    Github star 历史 #  timqian/star-history #  https://star-history.t9t.io/\nvesoft-inc/github-statistics #  A react static app for displaying github repo statistiscs like Star History, Fork History and more.\nhttps://vesoft-inc.github.io/github-statistics/\nantonmedv/spark #  \nseladb/startrack-js #  GitHub star history and stats - based on JavaScript only!\nhttps://seladb.github.io/StarTrack-js/\nelliotreborn/github-stars #  技术栈的 star 趋势数据\n Github PR 统计 #  开源相关工作岗位 #  t9tio/open-source-jobs A list of Open Source projects offering jobs. https://oo.t9t.io/organizations\n 角落标志 tholman/github-corners #  http://tholman.com/github-corners/\n如：  GitHub Apps #   Run persistently and can react to events quickly. Work great when persistent data is needed. Work best with API requests that aren\u0026rsquo;t time consuming. Run on a server or compute infrastructure that you provide.  参考：\n Strengths of GitHub Actions and GitHub Apps  Mergify #  Stop merging your pull requests manually.\nWe save your time by automatically merging, commenting, rebasing, updating, labeling, backporting, closing, assigning, your pull requests.\nMergifyio/mergify-engine #  Engine for Mergify https://mergify.io\nNetlify #  [wei/pull] #  Pull #  Keep your forks up-to-date via automated PRs\nwei/pull probot/weekly-digest #  自动生成周报到 issue\nGitHub Actions #   Provide automation that can perform continuous integration and continuous deployment. Can run directly on runner machines or in Docker containers. Can include access to a clone of your repository, enabling deployment and publishing tools, code formatters, and command line tools to access your code. Don\u0026rsquo;t require you to deploy code or serve an app. Have a simple interface to create and use secrets, which enables actions to interact with third-party services without needing to store the credentials of the person using the action.   Github 工具开发 #  webhook #  NetEaseGame/git-webhook #  使用 Python Flask + SQLAchemy + Celery + Redis + React 开发的用于迅速搭建并使用 WebHook 进行自动化部署和运维，支持 Github / GitLab / Gogs / GitOsc。 https://webhook.hust.cc/\n若觉得 git-webhook 部署依然比较复杂，可以尝试更为简洁的 cli 版本 hustcc/webhookit  github-webhook-handler #  Node.js web handler / middleware for processing GitHub Webhooks\n go-playground/webhooks #  Webhook receiver for GitHub, Bitbucket, GitLab, Gogs\n hustcc/webhookit #  Simple git webhook cli tool for automation tasks, bind git webhook to action.\n gorda/issue-man #   Building apps #  参考：\n Building apps  Building actions #  参考：\n Building actions  "}),a.add({id:1,href:'/apps/docs/macos/3/ssh/config/',title:"config",section:"ssh",content:"config #  my config #  ################ vps ################ Host bcc HostName 106.13.4.39 User root IdentityFile ~/.ssh/id_rsa Host vultr HostName 149.28.142.246 User root IdentityFile ~/.ssh/id_rsa ################ baidu ################ Host baidu HostName relay.baidu-int.com User yewang ################ git ################ Host github HostName github.com User git IdentityFile ~/.ssh/id_rsa ProxyCommand nc -v -x 127.0.0.1:1081 %h %p Host gitlab HostName gitlab.com User git IdentityFile ~/.ssh/id_rsa ProxyCommand nc -v -x 127.0.0.1:1081 %h %p Host bitbucket HostName bitbucket.org User git IdentityFile ~/.ssh/id_rsa ProxyCommand nc -v -x 127.0.0.1:1081 %h %p Host gitcafe HostName e.coding.net User git IdentityFile ~/.ssh/id_rsa Host gitee HostName gitee.com User git IdentityFile ~/.ssh/id_rsa ################ others ################ Host * # 复用之前已经建立的连接 ControlMaster auto # 在最后一个连接关闭之后也不真正的关掉连接 ControlPersist yes # 指定了这个连接的 socket 保存的路径 ControlPath ~/.ssh/connection-%r@%h:%p # 心跳 ServerAliveInterval 60 # ServerAliveCountMax 20 # ForwardAgent yes # KexAlgorithms +diffie-hellman-group1-sha1 # PreferredAuthentications publickey # TCPKeepAlive no # Compression yes # 走 HTTP 代理 # ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport=8081 # 走 socks5 代理（如 Shadowsocks） # ProxyCommand nc -v -x 127.0.0.1:1080 %h %p "}),a.add({id:2,href:'/apps/docs/macos/3/git/',title:"git",section:"三星",content:"git #  git module #  git submodule foreach git reset --hard HEAD git submodule update git submodule foreach \u0026#34;git checkout master; git pull\u0026#34; git submodule foreach git clean -f 更新 submodule #  git submodule update --init git submodule update --remote  merge vs squash vs rebase #  merge 不能保持 master 分支干净，但是保持了所有的 commit history，大多数情况下都是不好的，个别情况挺好 squash 也可以保持 master 分支干净，但是 master 中 author 都是 maintainer，而不是原 owner rebase 可以尽可能保持 master 分支干净整洁，并且易于识别 author\nsquash merge #  # 切换到目标分支 $ git checkout master # 以 squash 的形式 merge $ git merge --squash devel # it does not produce a commit right away: you need an additional commit $ git commit -m \u0026#34;squash branch\u0026#34;  你会发现，在 master 分支上居然有未提交的修改，然后你就需要在 master 上主动提交了修改， 注意，这里是你 commit 的，也就是改变了 commit 的 author。 git merge has a \u0026ndash;commit option, but it cannot be used with \u0026ndash;squash. It was never possible to use \u0026ndash;commit and \u0026ndash;squash together.  参考：\n In git, what is the difference between merge \u0026ndash;squash and rebase?  rebase merge #  # 先切换到 devel 分支（不一样咯） $ git checkout devel # 变基 $ git rebase -i master # 切换回目标分支 $ git checkout master # 合并 $ git merge  我们在 devel 里面对照 master 进行了变基  所谓的变基其实就是找到两个分支共同的祖先   然后在当前分支上合并从共同祖先到现在的所有 commit  会选择怎么处理这些 commit   然后我们就得到了一个从公共 commit 到现在的单个 commit 这个时候别人将我们这个 commit 合并到 master 也只会在 master 上留下一个 commit 记录   合并 git commit #  参考：\n Trimming Git Commits/Squashing Git History   git branch 与 git tag 同名 #  需要使用完整路径\ngit checkout refs/heads/v1.5.2 git checkout refs/tags/v1.5.2 git push -u origin refs/heads/v4.8.0 参考：\n In git, is it a bad idea to create a tag with the same name as a deleted branch?   git pull force #  git fetch --all # git reset --hard origin/\u0026lt;branch_name\u0026gt; git reset --hard origin/master 参考：\n How do I force “git pull” to overwrite local files?   hard reset vs mixed reset vs soft reset #  # 回到 reset 版本，之后的文件都属于 git add 的状态 git reset --soft # git reset 默认就是 --mixed # 回到 reset 版本，之后的文件都属于 git add 前的状态 git reset --mixed # 回到 reset 版本，之后文件都丢弃（使用 git reflog 可以找回来） git reset --hard git reflog #  reflog 是 Git 操作的一道安全保障，它能够记录几乎所有本地仓库的改变。\n包括所有分支 commit 提交，已经删除的 commit（其实并未被实际删除）都会被记录。\n只要 HEAD 发生变化，就可以通过 reflog 查看到。\ngit 回退 #  # 文件放弃本地修改 git checkout -- \u0026lt;file\u0026gt; # 回退到某个版本 git checkout commit-id \u0026lt;path\u0026gt; git reset -- \u0026lt;path\u0026gt; 参考：\n Why git can\u0026rsquo;t do hard/soft resets by path?  "}),a.add({id:3,href:'/apps/docs/macos/3/git/config/',title:"git config",section:"git",content:"git config #  config 权限 #  问题： Bad owner or permissions on ~/.ssh/config\n解决：\nchown $USER ~/.ssh/config chmod 644 ~/.ssh/config "}),a.add({id:4,href:'/apps/docs/macos/',title:"MacOS",section:"Docs",content:"MacOS #  参考 #  jaywcjlove/awesome-mac #  jaywcjlove/awesome-mac "}),a.add({id:5,href:'/apps/docs/macos/3/ssh/',title:"ssh",section:"三星",content:"ssh #  ssh-keygen #  代理 #  ssh -o ProxyCommand=\u0026#39;socat - SOCKS4A:myproxy:%h:%p,socksuser=nobody\u0026#39; user@host # SOCKS5 ssh -o ProxyCommand=\u0026#39;socat - \u0026#34;SOCKS5:%h:%p|tcp:myproxy:1080\u0026#34;\u0026#39; user@host # http ssh -o ProxyCommand=\u0026#39;socat - \u0026#34;PROXY:%h:%p|tcp:myproxy:80\u0026#34;\u0026#39; user@host 参考：\n Connecting to host by SSH client in Linux by proxy  "}),a.add({id:6,href:'/apps/docs/macos/3/git/submodule/',title:"submodule",section:"git",content:"git submodule #  拉取 submodule #  git submodule init git submodule update --remote git submodule add -b #  参考：\n How can I specify a branch/tag when adding a Git submodule?  submodule 修改 url #   edit the .gitmodules file to update the URL git submodule sync  参考： How to change the remote repository for a git submodule?\ndelete submodule #   Delete the relevant section from the .gitmodules file. Stage the .gitmodules changes git add .gitmodules Delete the relevant section from .git/config. Run git rm --cached path_to_submodule (no trailing slash). Run rm -rf .git/modules/path_to_submodule (no trailing slash). Commit git commit -m \u0026quot;Removed submodule \u0026quot; Delete the now untracked submodule files rm -rf path_to_submodule  参考：\n How do I remove a submodule?   untracked status #  [submodule \u0026#34;example\u0026#34;] path = example url = git://github.com/ikingye/example.git ignore = dirty  How to get rid of Git submodules untracked status?  "}),a.add({id:7,href:'/apps/docs/macos/5/vscode/',title:"VSCode",section:"五星",content:"VSCode #  Microsoft/vscode  安装 #  brew cask install visual-studio-code  配置 #  settings.json\n{ \u0026#34;gitlens.advanced.messages\u0026#34;: { \u0026#34;suppressShowKeyBindingsNotice\u0026#34;: true }, \u0026#34;gitlens.historyExplorer.enabled\u0026#34;: true, \u0026#34;java.errors.incompleteClasspath.severity\u0026#34;: \u0026#34;ignore\u0026#34;, \u0026#34;materialTheme.autoApplyIcons\u0026#34;: true, \u0026#34;workbench.colorCustomizations\u0026#34;: {}, \u0026#34;materialTheme.accentPrevious\u0026#34;: \u0026#34;Breaking Bad\u0026#34;, \u0026#34;workbench.colorTheme\u0026#34;: \u0026#34;Material Theme\u0026#34;, \u0026#34;materialTheme.fixIconsRunning\u0026#34;: false, // Controls the font family. \u0026#34;editor.fontFamily\u0026#34;: \u0026#34;Consolas\u0026#34;, \u0026#34;editor.lineHeight\u0026#34;: 22, \u0026#34;window.zoomLevel\u0026#34;: 0, \u0026#34;editor.fontSize\u0026#34;: 14, \u0026#34;workbench.startupEditor\u0026#34;: \u0026#34;newUntitledFile\u0026#34;, \u0026#34;editor.suggestSelection\u0026#34;: \u0026#34;first\u0026#34;, \u0026#34;vsintellicode.modify.editor.suggestSelection\u0026#34;: \u0026#34;automaticallyOverrodeDefaultValue\u0026#34;, \u0026#34;python.jediEnabled\u0026#34;: false, \u0026#34;leetcode.endpoint\u0026#34;: \u0026#34;leetcode-cn\u0026#34;, \u0026#34;python.linting.pylintEnabled\u0026#34;: true, \u0026#34;leetcode.defaultLanguage\u0026#34;: \u0026#34;golang\u0026#34;, \u0026#34;leetcode.hint.configWebviewMarkdown\u0026#34;: false, \u0026#34;leetcode.hint.commentDescription\u0026#34;: false, \u0026#34;go.useLanguageServer\u0026#34;: true, \u0026#34;[go]\u0026#34;: { \u0026#34;editor.formatOnSave\u0026#34;: true, \u0026#34;editor.codeActionsOnSave\u0026#34;: { \u0026#34;source.organizeImports\u0026#34;: true }, // Optional: Disable snippets, as they conflict with completion ranking. \u0026#34;editor.snippetSuggestions\u0026#34;: \u0026#34;none\u0026#34; }, \u0026#34;[go.mod]\u0026#34;: { \u0026#34;editor.formatOnSave\u0026#34;: true, \u0026#34;editor.codeActionsOnSave\u0026#34;: { \u0026#34;source.organizeImports\u0026#34;: true } }, \u0026#34;gopls\u0026#34;: { // Add parameter placeholders when completing a function. \u0026#34;usePlaceholders\u0026#34;: true, // If true, enable additional analyses with staticcheck. // Warning: This will significantly increase memory usage. \u0026#34;staticcheck\u0026#34;: false }, \u0026#34;leetcode.workspaceFolder\u0026#34;: \u0026#34;/Users/yewang/.leetcode\u0026#34;, \u0026#34;leetcode.hint.commandShortcut\u0026#34;: false, // Configure glob patterns for excluding files and folders. // For example, the files explorer decides which files and folders to show or hide based on this setting. // Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options). \u0026#34;files.exclude\u0026#34;: { \u0026#34;**/.git\u0026#34;: true, \u0026#34;**/.svn\u0026#34;: true, \u0026#34;**/.hg\u0026#34;: true, \u0026#34;**/CVS\u0026#34;: true, \u0026#34;**/.DS_Store\u0026#34;: true, \u0026#34;**/.classpath\u0026#34;: true, \u0026#34;**/.project\u0026#34;: true, \u0026#34;**/.settings\u0026#34;: true, \u0026#34;**/.factorypath\u0026#34;: true }, \u0026#34;http.proxy\u0026#34;: \u0026#34;http://127.0.0.1:8081\u0026#34;, \u0026#34;terminal.integrated.inheritEnv\u0026#34;: true, \u0026#34;terminal.integrated.shell.osx\u0026#34;: \u0026#34;/bin/zsh\u0026#34;, // 为了使用 agnoster zsh 主题 \u0026#34;terminal.integrated.fontFamily\u0026#34;: \u0026#34;Meslo LG M DZ for Powerline\u0026#34;, \u0026#34;terminal.integrated.rendererType\u0026#34;: \u0026#34;dom\u0026#34;, // 选中即复制 \u0026#34;terminal.integrated.copyOnSelection\u0026#34;: true, \u0026#34;sourcetrail.startServerAtStartup\u0026#34;: true, // vim \u0026#34;vim.normalModeKeyBindingsNonRecursive\u0026#34;: [ { \u0026#34;before\u0026#34;: [\u0026#34;:\u0026#34;], \u0026#34;commands\u0026#34;: [\u0026#34;workbench.action.showCommands\u0026#34;] }, { \u0026#34;before\u0026#34;: [\u0026#34;\u0026lt;leader\u0026gt;\u0026#34;, \u0026#34;m\u0026#34;], \u0026#34;commands\u0026#34;: [\u0026#34;bookmarks.toggle\u0026#34;] }, { \u0026#34;before\u0026#34;: [\u0026#34;\u0026lt;leader\u0026gt;\u0026#34;, \u0026#34;b\u0026#34;], \u0026#34;commands\u0026#34;: [\u0026#34;bookmarks.list\u0026#34;] }, { \u0026#34;before\u0026#34;: [\u0026#34;Z\u0026#34;, \u0026#34;Z\u0026#34;], \u0026#34;commands\u0026#34;: [\u0026#34;:wq\u0026#34;] }, { \u0026#34;before\u0026#34;: [\u0026#34;\u0026lt;C-n\u0026gt;\u0026#34;], \u0026#34;commands\u0026#34;: [\u0026#34;:nohl\u0026#34;] }, { \u0026#34;before\u0026#34;: [\u0026#34;leader\u0026#34;, \u0026#34;w\u0026#34;], \u0026#34;commands\u0026#34;: [\u0026#34;workbench.action.files.save\u0026#34;] } ], // 无法兼容 R 插入模式 // \u0026#34;vim.insertModeKeyBindings\u0026#34;: [ // { // \u0026#34;before\u0026#34;: [\u0026#34;j\u0026#34;, \u0026#34;j\u0026#34;], // \u0026#34;after\u0026#34;: [\u0026#34;\u0026lt;Esc\u0026gt;\u0026#34;] // } // ], \u0026#34;vim.visualModeKeyBindingsNonRecursive\u0026#34;: [ { \u0026#34;before\u0026#34;: [\u0026#34;p\u0026#34;], \u0026#34;after\u0026#34;: [\u0026#34;p\u0026#34;, \u0026#34;g\u0026#34;, \u0026#34;v\u0026#34;, \u0026#34;y\u0026#34;] }, { \u0026#34;before\u0026#34;: [\u0026#34;\u0026gt;\u0026#34;], \u0026#34;commands\u0026#34;: [\u0026#34;editor.action.indentLines\u0026#34;] }, { \u0026#34;before\u0026#34;: [\u0026#34;\u0026lt;\u0026#34;], \u0026#34;commands\u0026#34;: [\u0026#34;editor.action.outdentLines\u0026#34;] } ], \u0026#34;explorer.confirmDragAndDrop\u0026#34;: false, \u0026#34;explorer.confirmDelete\u0026#34;: false, \u0026#34;markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited\u0026#34;: false, \u0026#34;markdown.extension.preview.autoShowPreviewToSide\u0026#34;: false, \u0026#34;[html]\u0026#34;: { \u0026#34;editor.defaultFormatter\u0026#34;: \u0026#34;esbenp.prettier-vscode\u0026#34; }, // Activate Python Environment in Terminal created using the Extension. \u0026#34;python.terminal.activateEnvironment\u0026#34;: false, // Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs). \u0026#34;python.venvPath\u0026#34;: \u0026#34;~/.local/share/virtualenvs\u0026#34;, \u0026#34;editor.largeFileOptimizations\u0026#34;: false, \u0026#34;C_Cpp.updateChannel\u0026#34;: \u0026#34;Insiders\u0026#34;, \u0026#34;[markdown]\u0026#34;: { \u0026#34;editor.defaultFormatter\u0026#34;: \u0026#34;esbenp.prettier-vscode\u0026#34; }, // Format a file on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down. \u0026#34;editor.formatOnSave\u0026#34;: false, \u0026#34;[cpp]\u0026#34;: { \u0026#34;editor.defaultFormatter\u0026#34;: \u0026#34;ms-vscode.cpptools\u0026#34; }, \u0026#34;clang-format.executable\u0026#34;: \u0026#34;/Users/yewang/.vscode/extensions/ms-vscode.cpptools-0.27.0-insiders3/LLVM/bin/clang-format.darwin\u0026#34;, \u0026#34;[json]\u0026#34;: { \u0026#34;editor.defaultFormatter\u0026#34;: \u0026#34;HookyQR.beautify\u0026#34; }, // markdownlint config object \u0026#34;markdownlint.config\u0026#34;: { \u0026#34;MD004\u0026#34;: false, \u0026#34;MD013\u0026#34;: false, \u0026#34;MD024\u0026#34;: false, \u0026#34;MD025\u0026#34;: false, \u0026#34;MD026\u0026#34;: false, \u0026#34;MD040\u0026#34;: false, \u0026#34;MD045\u0026#34;: false }, \u0026#34;markdownlint.run\u0026#34;: \u0026#34;onSave\u0026#34;, \u0026#34;window.title\u0026#34;: \u0026#34;${dirty} ${activeEditorMedium}${separator}${rootName}\u0026#34;, // 右侧概览 用色块代替缩小的字符; 设置水平最大列数; 始终显示滑块 \u0026#34;editor.minimap.renderCharacters\u0026#34;: false, \u0026#34;editor.minimap.maxColumn\u0026#34;: 200, \u0026#34;editor.minimap.showSlider\u0026#34;: \u0026#34;always\u0026#34;, // 标签 \u0026#34;editor.smoothScrolling\u0026#34;: true, \u0026#34;editor.cursorBlinking\u0026#34;: \u0026#34;phase\u0026#34;, // \u0026#34;editor.cursorSmoothCaretAnimation\u0026#34;: true, // 最后一行 \u0026#34;files.insertFinalNewline\u0026#34;: true, // 取消最后空格 \u0026#34;files.trimTrailingWhitespace\u0026#34;: true, // 取消发送给 ms \u0026#34;telemetry.enableCrashReporter\u0026#34;: false, \u0026#34;telemetry.enableTelemetry\u0026#34;: false, \u0026#34;workbench.settings.enableNaturalLanguageSearch\u0026#34;: false, // \u0026#34;editor.renderWhitespace\u0026#34;: \u0026#34;all\u0026#34;, // Fit code within this line limit // \u0026#34;prettier.printWidth\u0026#34;: 80, // Controls the wrapping column of the editor when `editor.wordWrap` is `wordWrapColumn` or `bounded`. // \u0026#34;editor.wordWrapColumn\u0026#34;: 80, \u0026#34;python.formatting.autopep8Args\u0026#34;: [\u0026#34;--max-line-length=100\u0026#34;], \u0026#34;javascript.updateImportsOnFileMove.enabled\u0026#34;: \u0026#34;always\u0026#34;, \u0026#34;[javascript]\u0026#34;: { \u0026#34;editor.defaultFormatter\u0026#34;: \u0026#34;HookyQR.beautify\u0026#34; }, \u0026#34;java.requirements.JDK11Warning\u0026#34;: false, \u0026#34;[java]\u0026#34;: { \u0026#34;editor.defaultFormatter\u0026#34;: \u0026#34;redhat.java\u0026#34; }, \u0026#34;[yaml]\u0026#34;: { \u0026#34;editor.defaultFormatter\u0026#34;: \u0026#34;esbenp.prettier-vscode\u0026#34; }, \u0026#34;java.semanticHighlighting.enabled\u0026#34;: true, \u0026#34;extensions.ignoreRecommendations\u0026#34;: true, \u0026#34;python.languageServer\u0026#34;: \u0026#34;Pylance\u0026#34;, \u0026#34;java.project.importOnFirstTimeStartup\u0026#34;: \u0026#34;automatic\u0026#34;, \u0026#34;picgo.picBed.current\u0026#34;: \u0026#34;github\u0026#34;, \u0026#34;picgo.picBed.github.repo\u0026#34;: \u0026#34;ikingye/imagehost\u0026#34;, \u0026#34;picgo.picBed.github.token\u0026#34;: \u0026#34;xxx\u0026#34;, \u0026#34;picgo.picBed.github.branch\u0026#34;: \u0026#34;master\u0026#34;, \u0026#34;picgo.picBed.github.customUrl\u0026#34;: \u0026#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost\u0026#34;, \u0026#34;picgo.picBed.github.path\u0026#34;: \u0026#34;picgo/\u0026#34;, \u0026#34;picgo.customOutputFormat\u0026#34;: \u0026#34;![](${url})\u0026#34;, \u0026#34;csharp.suppressDotnetInstallWarning\u0026#34;: true, \u0026#34;csharp.suppressDotnetRestoreNotification\u0026#34;: true, \u0026#34;go.goroot\u0026#34;: \u0026#34;/usr/local/Cellar/go/1.14.6/libexec\u0026#34;, \u0026#34;sonarlint.rules\u0026#34;: { \u0026#34;Web:LinkToImageCheck\u0026#34;: { \u0026#34;level\u0026#34;: \u0026#34;off\u0026#34; } }, \u0026#34;python.showStartPage\u0026#34;: false, \u0026#34;hediet.vscode-drawio.local-storage\u0026#34;: \u0026#34;xxx\u0026#34;, \u0026#34;hediet.vscode-drawio.codeLinkActivated\u0026#34;: true, // Configure which editor to use for specific file types. \u0026#34;workbench.editorAssociations\u0026#34;: [ { \u0026#34;viewType\u0026#34;: \u0026#34;hediet.vscode-drawio-text\u0026#34;, \u0026#34;filenamePattern\u0026#34;: \u0026#34;*.svg\u0026#34; }, { \u0026#34;viewType\u0026#34;: \u0026#34;hediet.vscode-drawio-text\u0026#34;, \u0026#34;filenamePattern\u0026#34;: \u0026#34;*.drawio\u0026#34; } ], \u0026#34;todo-tree.tree.showScanModeButton\u0026#34;: false, \u0026#34;[dockerfile]\u0026#34;: { \u0026#34;editor.defaultFormatter\u0026#34;: \u0026#34;ms-azuretools.vscode-docker\u0026#34; }, \u0026#34;jupyter.sendSelectionToInteractiveWindow\u0026#34;: true, \u0026#34;pasteImage.defaultName\u0026#34;: \u0026#34;YMMDDHHmmss\u0026#34;, \u0026#34;pasteImage.path\u0026#34;: \u0026#34;${projectRoot}/static/image/2020\u0026#34;, \u0026#34;jupyter.alwaysTrustNotebooks\u0026#34;: true }  插件 #  插件列表 #  code --list-extensions code --list-extensions --show-versions ouuan/my-vscode-extensions List your installed VS Code extensions in a Markdown file\n参考：\n Command line extension management  推荐插件 #     插件 类型 推荐 备注     ESLint 格式化 - JavaScript ★★★★    TabNine 代码补全 ★★★★     ESLint #  Microsoft/vscode-eslint TabNine #  codota/tabnine-vscode Tabnine works with all major programming languages including JavaScript, Python, TypeScript, PHP, C/C++, HTML/CSS, Go, Java, Ruby, C#, Rust, SQL, Bash, Kotlin, Julia, Lua, OCaml, Perl, Haskell, and React.​\n参考：\n VSCode 插件列表   PicGo/vs-picgo #  https://github.com/PicGo/vs-picgo\nformat #  autopep8 #  设置每行最大长度\n\u0026quot;python.formatting.autopep8Args\u0026quot;: [ \u0026quot;--max-line-length=200\u0026quot; ]  Draw.io #  hediet/vscode-drawio This unofficial extension integrates Draw.io (also known as diagrams.net) into VS Code.\n设置背景色\nFor set light theme, add in your settings.json next: \u0026#34;hediet.vscode-drawio.theme\u0026#34;: \u0026#34;atlas\u0026#34; // or if you\u0026#39;d like white menu on the top, not blue, use \u0026#34;Kennedy\u0026#34; theme \u0026#34;hediet.vscode-drawio.theme\u0026#34;: \u0026#34;Kennedy\u0026#34; // or if you mostly view, not edit, use \u0026#34;minimal\u0026#34; theme \u0026#34;hediet.vscode-drawio.theme\u0026#34;: \u0026#34;min\u0026#34; Dark: \u0026#34;hediet.vscode-drawio.theme\u0026#34;: \u0026#34;dark\u0026#34; 参考：\n Feature request: match theme colors  Paste Image #  mushanshitiancai/vscode-paste-image paste image from clipboard to markdown/asciidoc directly!\n 快捷键 #  MacOS 选择  选中所有同一个词 cmd + shift + L  跳转  左右括号跳转 cmd + shift + \\ 跳到定义 cmd + 鼠标左键单击 返回光标上一个位置 ctrl + -  编辑  格式化 opt + shift + f  Windows 选择  选中所有同一个词 ctrl + shift + L  跳转  左右括号跳转 ctrl + shift + \\ 跳到定义 ctrl + 鼠标左键单击 返回光标上一个位置 alt + ←    Debug #  参考：\n USER GUIDE - Debugging Debug C++ in Visual Studio Code   常见问题 #  Could not create temporary directory: Permission denied #  sudo chown -R $USER ~/Library/Caches/*  教程 #   帮你高效使用 VS Code 的秘诀  "}),a.add({id:8,href:'/apps/docs/macos/5/',title:"五星",section:"MacOS",content:"五星 #  GoLand #  见 Goland\nHomebrew #  Homebrew/brew The missing package manager for macOS (or Linux) https://brew.sh\n IntelliJ IDEA #  见 IntelliJ IDEA\n iTerm2 #  https://www.iterm2.com/\n Oh My Zsh #  https://ohmyz.sh/\nhttps://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh # 提示符 export PROMPT=\u0026#39;%{$fg[magenta]%}%(?..%?%1v)%n@%{$fg[green]%}%M:%{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)\u0026#39; # 设置默认 shell sudo chsh -s /usr/bin/zsh  VSCode #  详见：VSCode\n"}),a.add({id:9,href:'/apps/docs/macos/4/flowchart/tutorial/',title:"教程",section:"Flowchart",content:"Flowchart 教程 #  "}),a.add({id:10,href:'/apps/docs/macos/4/graphviz/tutorial/',title:"教程",section:"Graphviz",content:"Graphviz 教程 #  http://www.graphviz.org/documentation/\n"}),a.add({id:11,href:'/apps/docs/macos/4/latex/tutorial/',title:"教程",section:"LaTeX",content:"LaTeX 教程 #  基础 #  dspinellis/latex-advice #  "}),a.add({id:12,href:'/apps/docs/macos/4/mermaid/tutorial/',title:"教程",section:"Mermaid",content:"Mermaid 教程 #  基础 #  "}),a.add({id:13,href:'/apps/docs/macos/4/plantuml/tutorial/',title:"教程",section:"PlantUML",content:"PlantUML 教程 #  "}),a.add({id:14,href:'/apps/docs/macos/3/package-manager/brew/',title:"homebrew",section:"包管理工具",content:"Homebrew #  tap #  brew tap 可以为 brew 的软件的 跟踪，更新，安装添加更多的的 tap formulae\n如果你在核心仓库没有找到你需要的软件，那么你就需要安装第三方的仓库去安装你需要的软件\ntap 命令的仓库源默认来至于 Github，但是这个命令也不限制于这一个地方\nbrew tap #  没有参数会自动更新已经存在的 tap 并列出当前已经 tapped 的仓库\n# URL 默认是 https://github.com/user/homebrew-repo brew tap \u0026lt;user\u0026gt;/\u0026lt;repo\u0026gt; brew tap \u0026lt;user\u0026gt;/\u0026lt;homebrew-repo\u0026gt; # URL 可以是任何位置，任何协议 brew tap \u0026lt;user\u0026gt;/\u0026lt;repo\u0026gt; URL homebrew/core 默认是最高优先级\n可以使用 brew tap-pin username/repo 使这个仓库优先级高于 core\n使用 brew-tap-unpin username/repo 取消\n当你使用 brew install foo 这个命令时，brew 将按照下面的顺序去查找哪个 formula(tap) 将被使用:\n pinned taps core formulae other taps   镜像加速 #  清华大学镜像 #  替换现有上游\n# brew 程序本身，Homebrew/Linuxbrew 相同 git -C \u0026#34;$(brew --repo)\u0026#34; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git # 以下针对 mac OS 系统上的 Homebrew git -C \u0026#34;$(brew --repo homebrew/core)\u0026#34; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git git -C \u0026#34;$(brew --repo homebrew/cask)\u0026#34; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git git -C \u0026#34;$(brew --repo homebrew/cask-fonts)\u0026#34; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask-fonts.git git -C \u0026#34;$(brew --repo homebrew/cask-drivers)\u0026#34; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask-drivers.git # 以下针对 Linux 系统上的 Linuxbrew git -C \u0026#34;$(brew --repo homebrew/core)\u0026#34; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/linuxbrew-core.git # 更换后测试工作是否正常 brew update  参考 #   Homebrew 和 Fink、MacPort 相比有什么优势？ 解决 Homebrew 下载更新极慢的问题  "}),a.add({id:15,href:'/apps/docs/macos/3/package-manager/',title:"包管理工具",section:"三星",content:"包管理工具 #  Linux #  Ubuntu #  apt #  sudo apt install # download .deb package sudo dpkg -i fd_8.0.0_amd64.deb # adapt version number and architecture Debian #  apt-get #  sudo apt-get install Fedora #  dnf #  dnf install dnf copr #  dnf copr enable keefle/fd dnf install fd Alpine Linux #  apk #  apk add Arch Linux #  pacman #  pacman -S Gentoo Linux #  emerge #  emerge -av openSUSE Linux #  zypper #  zypper in Void Linux #  xbps-install #  xbps-install -S FreeBSD #  pkg #  pkg install  Mac #  Homebrew #  MacPorts #   Windows #  Scoop #  Chocolatey #  其他 #  NixOS / via Nix #  Nix package manager #  nix-env -i Node.js #  NPM #  # On linux and macOS npm install -g Rust #  cargo #  cargo install "}),a.add({id:16,href:'/apps/docs/macos/3/hhkb/',title:"HHKB",section:"三星",content:"HHKB 键盘 #  Happy Hacking Keyboard\n使用 #  方向键 #  右侧的 Fn 键 + [ / ; '\n"}),a.add({id:17,href:'/apps/docs/macos/3/axure/',title:"Axure",section:"三星",content:"Axure RP #  Rapid Prototyping 快速原型\n快捷键 #   cmd + D: 副本 cmd + R: 替换  "}),a.add({id:18,href:'/apps/docs/macos/5/goland/',title:"Goland",section:"五星",content:"Goland #  快捷键 #  跳转 #    指定行 cmd + L\n  指定文件 shift + cmd + O\n  返回光标上一个位置 cmd + opt + 方向键\n  查询 #    函数列表 cmd + f12\n  当前文件查询 cmd + F\n  当前文件替换 cmd + R\n  所有文件查询 shift + cmd + F\n  所有文件替换 shift + cmd + R\n  选择 #   选中下一个相同内容 ctrl + G 选中所有相同内容 ctrl + G   展开所有代码块 shift + cmd + = 折叠所有代码块 shift + cmd + - 折叠或展开当前代码块 cmd + .  修改 #   复制当前行内容到下一行 cmd + D 删除当前行 cmd + delete 格式化代码 option + cmd + L   在当前行下一行增加空行 shift + enter 在当前行上一行增加空行 option + cmd + enter   license #   下载   "}),a.add({id:19,href:'/apps/docs/linux/',title:"Linux",section:"Docs",content:"开源镜像 #   清华大学开源软件镜像站  Ubuntu    "}),a.add({id:20,href:'/apps/docs/macos/3/mas/',title:"Mas",section:"三星",content:"mas-cli/mas #  Each application in the Mac App Store has a product identifier which is also used for mas-cli commands. Using mas list will show all installed applications and their product identifiers.\n$ mas list 446107677 Screens 407963104 Pixelmator 497799835 Xcode $ mas search Xcode 497799835 Xcode 688199928 Docs for Xcode 449589707 Dash 3 - API Docs \u0026amp; Snippets. Integrates with Xcode, Alfred, TextWrangler and many more. [...] $ mas install 808809998 ==\u0026gt; Downloading PaintCode 2 ==\u0026gt; Installed PaintCode 2 # If you want to install the first result that the search command returns, use the lucky command. $ mas lucky twitter ==\u0026gt; Downloading Twitter ==\u0026gt; Installed Twitter $ mas outdated 497799835 Xcode (7.0) 446107677 Screens VNC - Access Your Computer From Anywhere (3.6.7) $ mas upgrade Upgrading 2 outdated applications: Xcode (7.0), Screens VNC - Access Your Computer From Anywhere (3.6.7) ==\u0026gt; Downloading Xcode ==\u0026gt; Installed Xcode ==\u0026gt; Downloading iFlicks ==\u0026gt; Installed iFlicks $ mas upgrade 715768417 Upgrading 1 outdated application: Xcode (8.0) ==\u0026gt; Downloading Xcode ==\u0026gt; Installed Xcode $ mas signin mas@example.com ==\u0026gt; Signing in to Apple ID: mas@example.com Password: "}),a.add({id:21,href:'/apps/docs/macos/3/picgo/',title:"picgo",section:"三星",content:"picgo #  CLI 命令 #  PicGo/PicGo-Core #  Molunerfinn/PicGo #  "}),a.add({id:22,href:'/apps/docs/macos/3/tmux/',title:"tmux",section:"三星",content:"tmux #  gpakosz/.tmux 配置 #  ChrisJohnsen/tmux-MacOSX-pasteboard #  Using the Mac OS X programs pbpaste and pbcopy under tmux does not work.\nOther services and unpatched builds of screen are also affected.\ngpakosz/.tmux #  Oh My Tmux!\ncd git clone https://github.com/gpakosz/.tmux.git ln -s -f .tmux/.tmux.conf cp .tmux/.tmux.conf.local .  教程 #   tmux 2: Productive Mouse-Free Development by @bphogan. 手把手教你使用终端复用神器 Tmux，丢掉鼠标不是梦 [视频] 让你的 tmux 起死回生！[视频]  "}),a.add({id:23,href:'/apps/docs/macos/3/vim/',title:"vim",section:"三星",content:"vim #   教程 #  iggredible/Learn-Vim #  A book for learning the Vim editor the smart way.\n"}),a.add({id:24,href:'/apps/docs/macos/4/',title:"四星",section:"MacOS",content:"四星 #  Alfred #  https://www.alfredapp.com/\n Keyboard Maestro #   V2Ray #  v2ray/v2ray-core V2RayX #  Cenmrev/V2RayX  vscode #  wakatime dashboard 一直显示插件未安装 开启 debug，发现下载 wakatime-cli 出错。\n然后 cmd+shift+p，触发 wakatime enable，看到 wakatime-cli 解压且 chmod 成功，就 ok 了。\n这样就是成功了。\n WakaTime #  统计你的编程时间\nhttps://wakatime.com/\n"}),a.add({id:25,href:'/apps/docs/macos/5/idea/',title:"IntelliJ IDEA",section:"五星",content:"IntelliJ IDEA #  插件 #  Alibaba Java Coding Guidelines #   教程 #  xiaoxiunique/tool-tips #  idea 中相见恨晚的技巧 https://atips.cn/idea/\n"}),a.add({id:26,href:'/apps/docs/macos/4/latex/',title:"LaTeX",section:"四星",content:"LaTeX #  latex3/latex2e The LaTeX2e kernel https://www.latex-project.org/\nlatex3/latex3 The LaTeX3 Development Repository https://latex-project.org/latex3.html\n Mathpix #  Mathpix 允许你截取复杂数学方程式的截图，并立即将其转换为 LaTeX 可编辑文本。\n参考 #   自学 LaTeX 可以读什么书入门？ 如何在 1 小时内快速入手 LaTeX？ 有哪些好的 LaTeX 编辑器？ 用这个漂亮的工具将方程式截图迅速转换为 LaTeX KaTeX/KaTeX  TeX wiki  "}),a.add({id:27,href:'/apps/docs/macos/4/plantuml/',title:"PlantUML",section:"四星",content:"PlantUML #  plantuml/plantuml PlantUML 是一个开源项目，支持快速绘制时序图、用例图、类图、活动图、组件图、状态图、对象图、部署图等。同时还支持非 UML 图的甘特图、架构图等。\n"}),a.add({id:28,href:'/apps/docs/macos/3/',title:"三星",section:"MacOS",content:"三星 #  CP Editor #  cpeditor/cpeditor CP Editor - 提升你的算法竞赛编程体验！\n Hammerspoon #  Hammerspoon/hammerspoon This is a tool for powerful automation of OS X.\nAt its core, Hammerspoon is just a bridge between the operating system and a Lua scripting engine.\n multipass #  canonical/multipass # 创建一个 VM, 1GB 内存和 5GB 磁盘 multipass launch --name myvm --mem 1G --disk 5G # 为 VM 启动一个 shell multipass shell myvm # 挂载 multipass mount ~/code myvm:/home/ubuntu/yewang/code  neovim #  neovim/neovim Vim-fork focused on extensibility and usability https://neovim.io\n 微信助手 #  MustangYM/WeChatExtension-ForMac Mac 微信功能拓展 / 微信插件 / 微信小助手 (A plugin for Mac WeChat)\nlmk123/oh-my-wechat # 安装 curl -o- -L https://omw.limingkai.cn/install.sh | bash -s # 开机自动安装小助手的功能（即在开机后自动运行一次 omw -n） omw open # 解决重启错误问题，参考：https://github.com/MustangYM/WeChatExtension-ForMac/issues/816 sudo codesign --sign - --force --deep /Applications/WeChat.app 语雀 #  http://yuque.com/\n  命令行工具 #  fd #  sharkdp/fd A simple, fast and user-friendly alternative to \u0026lsquo;find\u0026rsquo;\nbrew install fd goproxy #  snail007/goproxy Proxy 是 golang 实现的高性能 http,https,websocket,tcp,socks5 代理服务器，支持内网穿透，链式代理，通讯加密，智能 HTTP,SOCKS5 代理，黑白名单，限速，限流量，限连接数，跨平台，KCP 支持，认证 API。\nhub #  github/hub A command-line tool that makes git easier to use with GitHub. https://hub.github.com/\nhyperfine #  sharkdp/hyperfine A command-line benchmarking tool\nMac App Store command line interface #  mas-cli/mas  nps #  ehang-io/nps server\n# 安装 sudo ./nps install # 启动 sudo nps start # 访问 web http://localhost:8080/ # 账户密码 # admin/123 # 日志 sudo tail -f /var/log/nps.log client\n下载 client\n./npc -server=192.168.64.1:8024 -vkey=qlati48ufop46lln -type=tcp  nteract #  nteract/nteract The interactive computing suite for you!\n Tmux #  见 Tmux\n"}),a.add({id:29,href:'/apps/docs/macos/4/mermaid/',title:"Mermaid",section:"四星",content:"Mermaid #  mermaid-js/mermaid Generation of diagram and flowchart from text in a similar manner as markdown http://mermaid-js.github.io/mermaid/\n"}),a.add({id:30,href:'/apps/docs/macos/4/flowchart/',title:"Flowchart",section:"四星",content:"Flowchart #  adrai/flowchart.js Draws simple SVG flow chart diagrams from textual representation of the diagram http://flowchart.js.org/\n"}),a.add({id:31,href:'/apps/docs/macos/4/graphviz/',title:"Graphviz",section:"四星",content:"Graphviz #  graphviz/graphviz\n插件 #  xflr6/graphviz Simple Python interface for Graphviz https://graphviz.readthedocs.io/\n"})})()